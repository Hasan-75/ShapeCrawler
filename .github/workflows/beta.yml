name: Beta

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            framework_version: 'net9.0'
          - os: windows-latest
            framework_version: 'net48'
          - os: windows-latest
            framework_version: 'net472'
          - os: ubuntu-latest
            framework_version: 'net9.0'
          - os: macos-14
            framework_version: 'net9.0'
          - os: macos-13
            framework_version: 'net9.0'
      fail-fast: false
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.0.x
      - name: Run tests
        run: |
          dotnet test --configuration Release --framework ${{ matrix.framework_version }} tests/ShapeCrawler.DevTests/ShapeCrawler.DevTests.csproj
          dotnet test --configuration Release --framework ${{ matrix.framework_version }} tests/ShapeCrawler.CITests/ShapeCrawler.CITests.csproj

  publish:
    name: Publish
    runs-on: windows-latest
    needs: test
    steps:
      - uses: actions/checkout@v5
      - name: Generate version
        id: versioning
        run: echo "PACKAGE_VERSION=${{ vars.VERSION }}-beta.$(Get-Date -Format 'yyyyMMddHHmm')" >> $env:GITHUB_ENV
      - name: Create and publish package
        run: |
          dotnet pack src\ShapeCrawler.csproj --configuration Release /p:Version=${{ env.PACKAGE_VERSION }}
          dotnet nuget push "src\bin\Release\*.nupkg" -s https://www.myget.org/F/shape/api/v3/index.json -k ${{ secrets.MYGET_API_KEY }}